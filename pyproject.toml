[project]
name = "be"
version = "0.1.0"
description = "Default template for PDM package"
authors = [{ name = "Ferdinand Urban", email = "me@ferdinandurban.com" }]
dependencies = [
    "psycopg2-binary>=2.9.9",
    "pydantic>=2.6.3",
    "sqlalchemy>=2.0.28",
    "pytest>=8.0.2",
    "fastapi>=0.110.0",
    "python-dotenv>=1.0.0",
    "mypy-extensions>=1.0.0",
    "pytest-mock>=3.12.0",
    "coverage>=7.4.0",
    "openai>=1.14.2",
    "httpx>=0.27.0",
    "alembic>=1.13.1",
    "uvicorn>=0.28.0",
    "sqlalchemy-utils>=0.41.2",
    "black>=24.3.0",
    "yake>=0.4.8",
    "boto3>=1.34.109",
    "requests>=2.32.1",
    "loguru>=0.7.2",
    "sentry-sdk>=2.9.0",
    "iso639>=0.1.4",
]
requires-python = "==3.12.*"
readme = "README.md"
license = { text = "MIT" }


[tool.pdm]
distribution = false


[tool.pdm.dev-dependencies]
dev = ["pytest>=7.4.3", "pytest-mock>=3.12.0"]
lint = ["ruff>=0.1.9", "mypy>=1.8.0", "pre-commit>=3.5.0"]
pytest = ["pytest-cov>=4.1.0"]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm.scripts]
start = "uvicorn main:app --port 8000 --reload --app-dir ./src/be"
lint = "ruff ."
fmt = "ruff format ."
test = "pytest"
coverage = "pytest --cov=src --cov-report=term-missing"
mypy = "mypy src"


[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 100
indent-width = 4

# Assume Python 3.8
target-version = "py38"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
# docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
# docstring-code-line-length = "dynamic"

[tool.mypy]
strict = false
